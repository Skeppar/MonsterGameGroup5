Index: src/main/java/Characters.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public abstract class Characters {\r\n\r\n    protected boolean isAlive;\r\n\r\n    protected Position position;\r\n\r\n    protected char symbol;\r\n\r\n    public Characters(boolean isAlive, Position position, char symbol) {\r\n\r\n        this.isAlive = isAlive;\r\n        this.position = position;\r\n        this.symbol = symbol;\r\n\r\n    }\r\n\r\n    public boolean getAlive() {\r\n        return isAlive;\r\n    }\r\n\r\n    public void setAlive(boolean alive) {\r\n    }\r\n\r\n    public Position getPosition() {\r\n        return position;\r\n    }\r\n\r\n    public void setPosition(Position position) {\r\n        this.position = position;\r\n    }\r\n\r\n    public char getSymbol() {\r\n        return symbol;\r\n    }\r\n\r\n    public void setSymbol(char symbol) {\r\n        this.symbol = symbol;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Characters.java b/src/main/java/Characters.java
--- a/src/main/java/Characters.java	(revision 9c979b3f98c8e6deaa0e78138eaeb8c353c0e1d3)
+++ b/src/main/java/Characters.java	(date 1661252936198)
@@ -14,8 +14,13 @@
 
     }
 
+    public Characters() {
+
+    }
+
     public boolean getAlive() {
-        return isAlive;
+        isAlive = true;
+        return true;
     }
 
     public void setAlive(boolean alive) {
@@ -30,6 +35,7 @@
     }
 
     public char getSymbol() {
+
         return symbol;
     }
 
Index: src/main/java/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Player {\r\n    private int x;\r\n    private int y;\r\n    private char symbol;\r\n    private int previousX;\r\n    private int previousY;\r\n\r\n    public Player(int x, int y, char symbol) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.symbol = symbol;\r\n        this.previousX = x;\r\n        this.previousY = y;\r\n    }\r\n\r\n    public int getX() {\r\n        return x;\r\n    }\r\n\r\n    public int getY() {\r\n        return y;\r\n    }\r\n\r\n    public char getSymbol() {\r\n        return symbol;\r\n    }\r\n\r\n    public int getPreviousX() {\r\n        return previousX;\r\n    }\r\n\r\n    public int getPreviousY() {\r\n        return previousY;\r\n    }\r\n\r\n    public void moveUp(){\r\n        previousX = x;\r\n        previousY = y;\r\n        y -= 2;\r\n    }\r\n\r\n    public void moveDown(){\r\n        previousX = x;\r\n        previousY = y;\r\n        y += 2;\r\n    }\r\n\r\n    public void moveLeft(){\r\n        previousX = x;\r\n        previousY = y;\r\n        x -= 2;\r\n    }\r\n\r\n    public void moveRight(){\r\n        previousX = x;\r\n        previousY = y;\r\n        x += 2;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"monstergame2.Player{\" +\r\n                \"x=\" + x +\r\n                \", y=\" + y +\r\n                \", symbol=\" + symbol +\r\n                \", previousX=\" + previousX +\r\n                \", previousY=\" + previousY +\r\n                '}';\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Player.java b/src/main/java/Player.java
--- a/src/main/java/Player.java	(revision 9c979b3f98c8e6deaa0e78138eaeb8c353c0e1d3)
+++ b/src/main/java/Player.java	(date 1661249186980)
@@ -1,16 +1,18 @@
-public class Player {
+public class Player extends Characters {
+
     private int x;
     private int y;
     private char symbol;
     private int previousX;
     private int previousY;
 
-    public Player(int x, int y, char symbol) {
+    public Player(int x, int y, char symbol, boolean alive) {
         this.x = x;
         this.y = y;
         this.symbol = symbol;
         this.previousX = x;
         this.previousY = y;
+        this.isAlive = alive;
     }
 
     public int getX() {
Index: src/main/java/Monster.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Monster extends Characters {\r\n\r\n    public Monster(boolean isAlive, Position position, char symbol) {\r\n        super(isAlive, position, symbol);\r\n    }\r\n\r\n    public char getSymbol() {\r\n\r\n        return symbol;\r\n    }\r\n\r\n    public void moveTowards(Player player) {\r\n        // a monster wants to minimize the distance between itself and the player\r\n\r\n        // Along which axis should the monster move in?\r\n        // The monster will move in the direction in which the distance between monster and player is the largest.\r\n        // Let's use the absolute value of the difference between the x-ccordinates vs the y-coordinates!\r\n        // Example of Math.abs -> https://www.tutorialspoint.com/java/lang/math_abs_int.htm\r\n\r\n        int diffX = this.position.getX() - player.getX();\r\n        int absDiffX = Math.abs(diffX);\r\n        int diffY = this.position.getY() - player.getY();\r\n        int absDiffY = Math.abs(diffY);\r\n\r\n        if (absDiffX > absDiffY) {\r\n            // Move horizontal! <--->\r\n            if (diffX < 0) {\r\n                int x = position.getX();\r\n                position.setX(x + 1);\r\n            } else {\r\n                int x = position.getX();\r\n                position.setX(x - 1);\r\n            }\r\n        } else if (absDiffX < absDiffY) {\r\n            // Move vertical! v / ^\r\n            if (diffY < 0) {\r\n                int y = position.getY();\r\n                position.setX(y + 1);\r\n            } else {\r\n                int y = position.getY();\r\n                position.setX(y - 1);\r\n            }\r\n        } else {\r\n            // Move diagonal! / or \\\r\n            if (diffX < 0) {\r\n                int x = position.getX();\r\n                position.setX(x + 1);\r\n            } else {\r\n                int x = position.getX();\r\n                position.setX(x - 1);\r\n            }\r\n            if (diffY < 0) {\r\n                int y = position.getY();\r\n                position.setX(y + 1);\r\n            } else {\r\n                int y = position.getY();\r\n                position.setX(y - 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n    @Override\r\n    public String toString() {\r\n        return \"monstergame2.Monster{\" +\r\n                \"x=\" + x +\r\n                \", y=\" + y +\r\n                \", symbol=\" + symbol +\r\n                \", previousX=\" + previousX +\r\n                \", previousY=\" + previousY +\r\n                '}';\r\n    }\r\n\r\n     */\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Monster.java b/src/main/java/Monster.java
--- a/src/main/java/Monster.java	(revision 9c979b3f98c8e6deaa0e78138eaeb8c353c0e1d3)
+++ b/src/main/java/Monster.java	(date 1661249186966)
@@ -59,17 +59,15 @@
         }
     }
 
-    /*
+
     @Override
     public String toString() {
         return "monstergame2.Monster{" +
-                "x=" + x +
-                ", y=" + y +
+                "x=" + getPosition().getX() +
+                ", y=" + getPosition().getY() +
                 ", symbol=" + symbol +
-                ", previousX=" + previousX +
-                ", previousY=" + previousY +
+                ", previousX=" + getPosition().getPreviousX() +
+                ", previousY=" + getPosition().getPreviousY() +
                 '}';
     }
-
-     */
 }
\ No newline at end of file
Index: src/main/java/MonsterGame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.googlecode.lanterna.TerminalSize;\r\nimport com.googlecode.lanterna.TextColor;\r\nimport com.googlecode.lanterna.input.KeyStroke;\r\nimport com.googlecode.lanterna.terminal.DefaultTerminalFactory;\r\nimport com.googlecode.lanterna.terminal.Terminal;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MonsterGame {\r\n\r\n    public static void main(String[] args) throws IOException {\r\n\r\n\r\n        try {\r\n            startGame();\r\n        } catch (IOException | InterruptedException e) {\r\n            e.printStackTrace();\r\n            System.exit(1);\r\n        } finally {\r\n            System.out.println(\"Game over!\");\r\n        }\r\n\r\n    }\r\n\r\n    private static void startGame() throws IOException, InterruptedException {\r\n        TerminalSize ts = new TerminalSize(150, 40);\r\n        DefaultTerminalFactory terminalFactory = new DefaultTerminalFactory();\r\n        terminalFactory.setInitialTerminalSize(ts);\r\n        Terminal terminal = terminalFactory.createTerminal();\r\n\r\n        Player player = createPlayer();\r\n\r\n        List<Monster> monsters = createMonsters();\r\n\r\n        drawCharacters(terminal, player, monsters);\r\n\r\n        do {\r\n            KeyStroke keyStroke = getUserKeyStroke(terminal);\r\n\r\n            movePlayer(player, keyStroke);\r\n\r\n            moveMonsters(player, monsters);\r\n\r\n            drawCharacters(terminal, player, monsters);\r\n\r\n        } while (isPlayerAlive(player, monsters));\r\n\r\n        terminal.setForegroundColor(TextColor.ANSI.RED);\r\n        terminal.setCursorPosition(player.getX(), player.getY());\r\n        terminal.putCharacter(player.getSymbol());\r\n        terminal.bell();\r\n        terminal.flush();\r\n    }\r\n\r\n    private static void moveMonsters(Player player, List<Monster> monsters) {\r\n        for (Monster monster : monsters) {\r\n            monster.moveTowards(player);\r\n        }\r\n    }\r\n\r\n    private static void movePlayer(Player player, KeyStroke keyStroke) {\r\n        switch (keyStroke.getKeyType()) {\r\n            case ArrowUp:\r\n                player.moveUp();\r\n                break;\r\n            case ArrowDown:\r\n                player.moveDown();\r\n                break;\r\n            case ArrowLeft:\r\n                player.moveLeft();\r\n                break;\r\n            case ArrowRight:\r\n                player.moveRight();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private static KeyStroke getUserKeyStroke(Terminal terminal) throws InterruptedException, IOException {\r\n        KeyStroke keyStroke;\r\n        do {\r\n            Thread.sleep(5);\r\n            keyStroke = terminal.pollInput();\r\n        } while (keyStroke == null);\r\n        return keyStroke;\r\n    }\r\n\r\n    public static Player createPlayer() {\r\n        return new Player(10,10, 'P');\r\n    }\r\n\r\n    private static List<Monster> createMonsters() {\r\n        List<Monster> monsters = new ArrayList<>();\r\n        monsters.add(new Monster(true, new Position(3, 3), 'X'));\r\n        return monsters;\r\n    }\r\n\r\n    private static Terminal createTerminal() throws IOException {\r\n        DefaultTerminalFactory terminalFactory = new DefaultTerminalFactory();\r\n        Terminal terminal = terminalFactory.createTerminal();\r\n        terminal.setCursorVisible(false);\r\n        return terminal;\r\n    }\r\n\r\n    private static void drawCharacters(Terminal terminal, Player player, List<Monster> monsters) throws IOException {\r\n        for (Monster monster : monsters) {\r\n            terminal.setCursorPosition(monster.getPosition().getPreviousX(), monster.getPosition().getPreviousY());\r\n            terminal.putCharacter(' ');\r\n\r\n            terminal.setCursorPosition(monster.getPosition().getX(), monster.getPosition().getY());\r\n            terminal.putCharacter(monster.getSymbol());\r\n        }\r\n\r\n        terminal.setCursorPosition(player.getPreviousX(), player.getPreviousY());\r\n        terminal.putCharacter(' ');\r\n\r\n        terminal.setCursorPosition(player.getX(), player.getY());\r\n        terminal.putCharacter(player.getSymbol());\r\n\r\n        terminal.flush();\r\n\r\n    }\r\n\r\n    private static boolean isPlayerAlive(Player player, List<Monster> monsters) {\r\n        for (Monster monster : monsters) {\r\n            if (monster.getPosition().getX() == player.getX() && monster.getPosition().getY() == player.getY()) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/MonsterGame.java b/src/main/java/MonsterGame.java
--- a/src/main/java/MonsterGame.java	(revision 9c979b3f98c8e6deaa0e78138eaeb8c353c0e1d3)
+++ b/src/main/java/MonsterGame.java	(date 1661253110405)
@@ -87,7 +87,7 @@
     }
 
     public static Player createPlayer() {
-        return new Player(10,10, 'P');
+        return new Player(10,10, 'P', true);
     }
 
     private static List<Monster> createMonsters() {
@@ -125,6 +125,7 @@
     private static boolean isPlayerAlive(Player player, List<Monster> monsters) {
         for (Monster monster : monsters) {
             if (monster.getPosition().getX() == player.getX() && monster.getPosition().getY() == player.getY()) {
+                player.isAlive = true;
                 return false;
             }
         }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ab343867-5b88-4de0-b281-52a3beea5f45\" name=\"Changes\" comment=\".\">\r\n      <change afterPath=\"$PROJECT_DIR$/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Map.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Monster.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/MonsterGame.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Player.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Position.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Characters.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Characters.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2DkRoM6YlP0bgF71LuzyvZCjqCP\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/AlvinSkeppar/Desktop\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\AlvinSkeppar\\IdeaProjects\\MonsterGameGroup5\\src\\main\\java\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"MonsterGame\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"MonsterGame\" />\r\n      <module name=\"MonsterGameGroup5\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.MonsterGame\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ab343867-5b88-4de0-b281-52a3beea5f45\" name=\"Changes\" comment=\"\" />\r\n      <created>1661241272303</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1661241272303</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\".\">\r\n      <created>1661246722192</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661246722193</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\".\">\r\n      <created>1661247187775</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661247187775</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\".\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\".\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 9c979b3f98c8e6deaa0e78138eaeb8c353c0e1d3)
+++ b/.idea/workspace.xml	(date 1661252734222)
@@ -4,18 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ab343867-5b88-4de0-b281-52a3beea5f45" name="Changes" comment=".">
-      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Map.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Monster.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/MonsterGame.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Player.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Position.java" afterDir="false" />
+    <list default="true" id="ab343867-5b88-4de0-b281-52a3beea5f45" name="Changes" comment="Starting file">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/Characters.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Characters.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Monster.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Monster.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/MonsterGame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/MonsterGame.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Player.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -93,7 +87,14 @@
       <option name="project" value="LOCAL" />
       <updated>1661247187775</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="Starting file">
+      <created>1661247837946</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1661247837946</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -109,6 +110,7 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="." />
-    <option name="LAST_COMMIT_MESSAGE" value="." />
+    <MESSAGE value="Starting file" />
+    <option name="LAST_COMMIT_MESSAGE" value="Starting file" />
   </component>
 </project>
\ No newline at end of file
