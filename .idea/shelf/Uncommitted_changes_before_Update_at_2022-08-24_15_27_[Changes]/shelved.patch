Index: src/main/java/Map.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.googlecode.lanterna.terminal.Terminal;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\npublic class Map {\r\n\r\n    private char block = '\\u2588';\r\n    private ArrayList<Position> positions;\r\n\r\n    public Map() {\r\n        this.positions = new ArrayList<>();\r\n    }\r\n\r\n    public ArrayList<Position> getPositions() {\r\n        return positions;\r\n    }\r\n\r\n    public char getBlock() {\r\n        return block;\r\n    }\r\n\r\n    public void map1() {\r\n        for (int a = 6; a < 16; a++) { // a = distance from right a < length. Next (a, star from top)\r\n            positions.add(new Position(a, 10));\r\n        }\r\n        for (int a = 1; a < 100; a++) {\r\n            positions.add(new Position(a, 100));\r\n        }\r\n        for (int a = 1; a < 100; a++) {\r\n            positions.add(new Position(a, 0));\r\n        }\r\n        for (int a = 0; a < 40; a++) {\r\n            positions.add(new Position(0, a));\r\n        }\r\n        for (int a = 0; a < 40; a++) {\r\n            positions.add(new Position(100, a));\r\n        }\r\n        for (int a = 15; a < 25; a++) {\r\n            positions.add(new Position(a, 5));\r\n        }\r\n        for (int a = 6; a < 23; a++) {\r\n            positions.add(new Position(a, 13));\r\n        }\r\n        for (int a = 5; a < 7; a++) {\r\n            positions.add(new Position(24, a));\r\n        }\r\n        for (int a = 23; a < 38; a++) {\r\n            positions.add(new Position(a, 9));\r\n        }\r\n        for (int a = 9; a < 18; a++) {\r\n            positions.add(new Position(38, a));\r\n        }\r\n        for (int a = 13; a < 20; a++) {\r\n            positions.add(new Position(30, a));\r\n        }\r\n        for (int a = 20; a < 47; a++) {\r\n            positions.add(new Position(a, 20));\r\n        }\r\n        for (int a = 24; a > 10; a--) {\r\n            positions.add(new Position(46, a));\r\n        }\r\n        for (int a = 20; a < 35; a++) {\r\n            positions.add(new Position(20, a));\r\n        }\r\n        for (int a = 30; a < 80; a++) {\r\n            positions.add(new Position(a, 5));\r\n        }\r\n        for (int a = 30; a > 8; a--) {  // a = distance from top a < height. Next (start from right, a)\r\n            positions.add(new Position(52, a));\r\n        }\r\n        for (int a = 52; a < 80; a++) { // a = distance from right a < length. Next (a, star from top)\r\n            positions.add(new Position(a, 30));\r\n        }\r\n    }\r\n\r\n    public void printMap(Terminal terminal) throws IOException {\r\n        map1();\r\n        for (Position position : positions) {\r\n             terminal.setCursorPosition(position.getX(), position.getY());\r\n             terminal.putCharacter(block);\r\n         }\r\n        terminal.flush();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Map.java b/src/main/java/Map.java
--- a/src/main/java/Map.java	(revision 755d338f92ad9fe56d35043a1a5ade917c2c2bcf)
+++ b/src/main/java/Map.java	(date 1661344151758)
@@ -24,17 +24,17 @@
         for (int a = 6; a < 16; a++) { // a = distance from right a < length. Next (a, star from top)
             positions.add(new Position(a, 10));
         }
-        for (int a = 1; a < 100; a++) {
-            positions.add(new Position(a, 100));
+        for (int a = 0; a < 100; a++) {
+            positions.add(new Position(a, 40));
         }
-        for (int a = 1; a < 100; a++) {
-            positions.add(new Position(a, 0));
+        for (int a = 0; a < 100; a++) {
+            positions.add(new Position(a, 1));
         }
-        for (int a = 0; a < 40; a++) {
+        for (int a = 1; a < 40; a++) {
             positions.add(new Position(0, a));
         }
-        for (int a = 0; a < 40; a++) {
-            positions.add(new Position(100, a));
+        for (int a = 1; a < 40; a++) {
+            positions.add(new Position(99, a));
         }
         for (int a = 15; a < 25; a++) {
             positions.add(new Position(a, 5));
Index: src/main/java/MonsterGame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.googlecode.lanterna.TerminalSize;\r\nimport com.googlecode.lanterna.TextColor;\r\nimport com.googlecode.lanterna.input.KeyStroke;\r\nimport com.googlecode.lanterna.terminal.DefaultTerminalFactory;\r\nimport com.googlecode.lanterna.terminal.Terminal;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MonsterGame {\r\n\r\n    public static void main(String[] args) throws IOException {\r\n\r\n        try {\r\n            startGame();\r\n        } catch (IOException | InterruptedException e) {\r\n            e.printStackTrace();\r\n            System.exit(1);\r\n        } finally {\r\n            System.out.println(\"Game over!\");\r\n        }\r\n    }\r\n\r\n    public static Map loadMap(Terminal terminal) throws IOException {\r\n        Map map = new Map();\r\n        map.printMap(terminal);\r\n        return map;\r\n    }\r\n\r\n    public static Cookie loadPoints(Terminal terminal) throws IOException {\r\n        Cookie cookie = new Cookie();\r\n        cookie.printPointsMap1(terminal);\r\n        return cookie;\r\n    }\r\n\r\n    private static void startGame() throws IOException, InterruptedException {\r\n        TerminalSize ts = new TerminalSize(100, 40);\r\n        DefaultTerminalFactory terminalFactory = new DefaultTerminalFactory();\r\n        terminalFactory.setInitialTerminalSize(ts);\r\n        Terminal terminal = terminalFactory.createTerminal();\r\n        Map map = loadMap(terminal);\r\n        Cookie cookie = loadPoints(terminal);\r\n        terminal.setCursorVisible(false);\r\n        terminal.flush();\r\n\r\n        Player player = createPlayer();\r\n\r\n        List<Monster> monsters = createMonsters();\r\n\r\n        drawCharacters(terminal, player, monsters);\r\n\r\n\r\n\r\n        do {\r\n            KeyStroke keyStroke = getUserKeyStroke(terminal);\r\n\r\n            movePlayer(player, keyStroke);\r\n\r\n            collectPoints(player, cookie);\r\n\r\n            crash(map, terminal, player);\r\n\r\n            moveMonsters(player, monsters);\r\n            crashMonster(map, terminal, monsters.get(0));\r\n\r\n            drawCharacters(terminal, player, monsters);\r\n\r\n            terminal.flush();\r\n            System.out.println(player.getPoints());\r\n\r\n        } while (isPlayerAlive(player, monsters));\r\n\r\n        terminal.setForegroundColor(TextColor.ANSI.RED);\r\n        terminal.setCursorPosition(player.getX(), player.getY());\r\n        terminal.putCharacter(player.getSymbol());\r\n        terminal.bell();\r\n        terminal.flush();\r\n    }\r\n\r\n    private static void crash(Map map, Terminal terminal, Player player) throws IOException {\r\n        boolean crashIntoObsticle = false;\r\n        for (Position p : map.getPositions()) {\r\n            if (player.getX() == p.getX() && player.getY() == p.getY()) {\r\n                crashIntoObsticle = true;\r\n            }\r\n        }\r\n\r\n        if (crashIntoObsticle) {\r\n            player.setX(player.getPreviousX());\r\n            player.setY(player.getPreviousY());\r\n        } else {\r\n\r\n            terminal.setCursorPosition(player.getPreviousX(), player.getPreviousY());\r\n            terminal.putCharacter(' ');\r\n            terminal.setCursorPosition(player.getX(), player.getY());\r\n            terminal.putCharacter(player.getSymbol());\r\n        }\r\n        terminal.flush();\r\n\r\n    }\r\n\r\n    private static void crashMonster(Map map, Terminal terminal, Monster monster) throws IOException {\r\n        boolean crashIntoObsticle = false;\r\n        for (Position p : map.getPositions()) {\r\n            if (monster.getX() == p.getX() && monster.getY() == p.getY()) {\r\n                crashIntoObsticle = true;\r\n            }\r\n        }\r\n\r\n        if (crashIntoObsticle) {\r\n            monster.setX(monster.getPreviousX());\r\n            monster.setY(monster.getPreviousY());\r\n        } else {\r\n\r\n            terminal.setCursorPosition(monster.getPreviousX(), monster.getPreviousY());\r\n            terminal.putCharacter(' ');\r\n            terminal.setCursorPosition(monster.getX(), monster.getY());\r\n            terminal.putCharacter(monster.getSymbol());\r\n        }\r\n        terminal.flush();\r\n\r\n    }\r\n\r\n\r\n\r\n    private static void moveMonsters(Player player, List<Monster> monsters) {\r\n        for (Monster monster : monsters) {\r\n            monster.moveTowards(player);\r\n        }\r\n    }\r\n\r\n    private static void movePlayer(Player player, KeyStroke keyStroke) {\r\n        switch (keyStroke.getKeyType()) {\r\n            case ArrowUp -> player.moveUp();\r\n            case ArrowDown -> player.moveDown();\r\n            case ArrowLeft -> player.moveLeft();\r\n            case ArrowRight -> player.moveRight();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private static KeyStroke getUserKeyStroke(Terminal terminal) throws InterruptedException, IOException {\r\n        KeyStroke keyStroke;\r\n        do {\r\n            Thread.sleep(5);\r\n            keyStroke = terminal.pollInput();\r\n        } while (keyStroke == null);\r\n        return keyStroke;\r\n    }\r\n\r\n    public static Player createPlayer() {\r\n        return new Player(true, new Position(11, 11), 'P');\r\n    }\r\n\r\n    private static List<Monster> createMonsters() {\r\n        List<Monster> monsters = new ArrayList<>();\r\n        monsters.add(new Monster(true, new Position(3, 3), 'X'));\r\n        return monsters;\r\n    }\r\n\r\n    private static Terminal createTerminal() throws IOException {\r\n        DefaultTerminalFactory terminalFactory = new DefaultTerminalFactory();\r\n        Terminal terminal = terminalFactory.createTerminal();\r\n        terminal.setCursorVisible(false);\r\n        return terminal;\r\n    }\r\n\r\n    private static void drawCharacters(Terminal terminal, Player player, List<Monster> monsters) throws IOException {\r\n        for (Monster monster : monsters) {\r\n            //terminal.setCursorPosition(monster.getPosition().getPreviousX(), monster.getPosition().getPreviousY());\r\n            //terminal.setCursorPosition(monster.setX(monster.getPreviousX(), monster.setY(mo);););\r\n\r\n\r\n            terminal.setCursorPosition(monster.getPreviousX(), monster.getPreviousY());\r\n            terminal.putCharacter(' ');\r\n            //monster.position.getX();\r\n            //terminal.setCursorPosition(monster.getPosition().getX(), monster.getPosition().getY());\r\n            terminal.setCursorPosition(monster.getX(), monster.getY());\r\n            terminal.putCharacter(monster.getSymbol());\r\n        }\r\n\r\n\r\n        terminal.setCursorPosition(player.getPreviousX(), player.getPreviousY());\r\n        terminal.putCharacter(' ');\r\n\r\n        terminal.setCursorPosition(player.getX(), player.getY());\r\n        terminal.putCharacter(player.getSymbol());\r\n\r\n        terminal.flush();\r\n\r\n    }\r\n\r\n    private static boolean isPlayerAlive(Player player, List<Monster> monsters) {\r\n        for (Monster monster : monsters) {\r\n            if (monster.getX() == player.getX() && monster.getY() == player.getY()) {\r\n                player.isAlive = true;\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private static void collectPoints(Player player, Cookie cookies) {\r\n        for (Position cookie : cookies.getCookies()) {\r\n            if (cookie.getX() == player.getX() && cookie.getY() == player.getY() && cookie.getisAlive()) {\r\n                player.setPoints();\r\n                cookie.setisAlive(false);\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/MonsterGame.java b/src/main/java/MonsterGame.java
--- a/src/main/java/MonsterGame.java	(revision 755d338f92ad9fe56d35043a1a5ade917c2c2bcf)
+++ b/src/main/java/MonsterGame.java	(date 1661347634573)
@@ -35,7 +35,7 @@
     }
 
     private static void startGame() throws IOException, InterruptedException {
-        TerminalSize ts = new TerminalSize(100, 40);
+        TerminalSize ts = new TerminalSize(100, 41);
         DefaultTerminalFactory terminalFactory = new DefaultTerminalFactory();
         terminalFactory.setInitialTerminalSize(ts);
         Terminal terminal = terminalFactory.createTerminal();
@@ -66,8 +66,10 @@
 
             drawCharacters(terminal, player, monsters);
 
+            terminal.setCursorPosition(5, 0);
+            terminal.putString("Points: ");
+
             terminal.flush();
-            System.out.println(player.getPoints());
 
         } while (isPlayerAlive(player, monsters));
 
@@ -97,8 +99,8 @@
             terminal.putCharacter(player.getSymbol());
         }
         terminal.flush();
-
     }
+
 
     private static void crashMonster(Map map, Terminal terminal, Monster monster) throws IOException {
         boolean crashIntoObsticle = false;
@@ -195,7 +197,6 @@
     private static boolean isPlayerAlive(Player player, List<Monster> monsters) {
         for (Monster monster : monsters) {
             if (monster.getX() == player.getX() && monster.getY() == player.getY()) {
-                player.isAlive = true;
                 return false;
             }
         }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ab343867-5b88-4de0-b281-52a3beea5f45\" name=\"Changes\" comment=\"Cookie position\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/uiDesigner.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/MonsterGame.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/MonsterGame.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Player.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Player.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Points.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Cookie.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Position.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Position.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2DkRoM6YlP0bgF71LuzyvZCjqCP\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\AlvinSkeppar\\IdeaProjects\\MonsterGameGroup5\\src\\main\\java\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"MonsterGame\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"MonsterGame\" />\r\n      <module name=\"MonsterGameGroup5\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.MonsterGame\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ab343867-5b88-4de0-b281-52a3beea5f45\" name=\"Changes\" comment=\"\" />\r\n      <created>1661241272303</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1661241272303</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\".\">\r\n      <created>1661246722192</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661246722193</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\".\">\r\n      <created>1661247187775</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661247187775</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Final version for today\">\r\n      <created>1661263695467</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661263695467</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Alvin ville förstöra lite\">\r\n      <created>1661264127450</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661264127450</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"PATCH NOTES 2022-08-24&#10;New updates:&#10;Monstrer fungerar, ingen snake.&#10;Frid och fröjd.\">\r\n      <created>1661331757532</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661331757532</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00006\" summary=\"Cookie position\">\r\n      <created>1661334391665</created>\r\n      <option name=\"number\" value=\"LOCAL−00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00006\" />\r\n      <updated>1661334391665</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\".\" />\r\n    <MESSAGE value=\"Final version for today\" />\r\n    <MESSAGE value=\"Alvin ville förstöra lite\" />\r\n    <MESSAGE value=\"PATCH NOTES 2022-08-24&#10;New updates:&#10;Monstrer fungerar, ingen snake.&#10;Frid och fröjd.\" />\r\n    <MESSAGE value=\"Cookie position\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Cookie position\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 755d338f92ad9fe56d35043a1a5ade917c2c2bcf)
+++ b/.idea/workspace.xml	(date 1661343447791)
@@ -5,12 +5,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="ab343867-5b88-4de0-b281-52a3beea5f45" name="Changes" comment="Cookie position">
-      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Map.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Map.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/MonsterGame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/MonsterGame.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Player.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Points.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Cookie.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Position.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Position.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
