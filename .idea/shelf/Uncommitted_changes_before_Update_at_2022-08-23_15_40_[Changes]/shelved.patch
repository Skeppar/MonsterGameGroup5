Index: src/main/java/Map.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.googlecode.lanterna.terminal.Terminal;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\npublic class Map {\r\n\r\n    private char block = '\\u2588';\r\n    private ArrayList<Position> positions;\r\n\r\n    public Map() {\r\n        this.positions = new ArrayList<>();\r\n    }\r\n\r\n    public void map1() throws IOException {\r\n        for (int a = 6; a < 16; a++) { // a = distance from right a < length. Next (a, star from top)\r\n            positions.add(new Position(a, 10));\r\n        }\r\n        for (int a = 15; a < 25; a++) {\r\n            positions.add(new Position(a, 5));\r\n        }\r\n        for (int a = 6; a < 23; a++) {\r\n            positions.add(new Position(a, 13));\r\n        }\r\n        for (int a = 5; a < 7; a++) {\r\n            positions.add(new Position(24, a));\r\n        }\r\n        for (int a = 23; a < 38; a++) {\r\n            positions.add(new Position(a, 9));\r\n        }\r\n        for (int a = 9; a < 18; a++) {\r\n            positions.add(new Position(38, a));\r\n        }\r\n        for (int a = 13; a < 20; a++) {\r\n            positions.add(new Position(30, a));\r\n        }\r\n        for (int a = 20; a < 47; a++) {\r\n            positions.add(new Position(a, 20));\r\n        }\r\n        for (int a = 24; a > 10; a--) {\r\n            positions.add(new Position(46, a));\r\n        }\r\n        for (int a = 20; a < 35; a++) {\r\n            positions.add(new Position(20, a));\r\n        }\r\n        for (int a = 30; a < 80; a++) {\r\n            positions.add(new Position(a, 5));\r\n        }\r\n        for (int a = 30; a > 8; a--) {  // a = distance from top a < height. Next (start from right, a)\r\n            positions.add(new Position(52, a));\r\n        }\r\n        for (int a = 52; a < 80; a++) { // a = distance from right a < length. Next (a, star from top)\r\n            positions.add(new Position(a, 30));\r\n        }\r\n    }\r\n\r\n    public void printMap(Terminal terminal) throws IOException {\r\n        map1();\r\n        for (Position position : positions) {\r\n             terminal.setCursorPosition(position.getX(), position.getY());\r\n             terminal.putCharacter(block);\r\n         }\r\n        terminal.flush();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Map.java b/src/main/java/Map.java
--- a/src/main/java/Map.java	(revision a3781312ce11e1cea1ee79690d86ce70321c9d5d)
+++ b/src/main/java/Map.java	(date 1661261950377)
@@ -6,13 +6,30 @@
 public class Map {
 
     private char block = '\u2588';
+
     private ArrayList<Position> positions;
 
     public Map() {
         this.positions = new ArrayList<>();
     }
 
+    public ArrayList<Position> getPositions() {
+        return positions;
+    }
+
     public void map1() throws IOException {
+        for (int a = 1; a < 100; a++) {
+            positions.add(new Position(a, 100));
+        }
+        for (int a = 1; a < 100; a++) {
+            positions.add(new Position(a, 0));
+        }
+        for (int a = 0; a < 50; a++) {
+            positions.add(new Position(0, a));
+        }
+        for (int a = 0; a < 50; a++) {
+            positions.add(new Position(100, a));
+        }
         for (int a = 6; a < 16; a++) { // a = distance from right a < length. Next (a, star from top)
             positions.add(new Position(a, 10));
         }
@@ -59,6 +76,8 @@
         for (Position position : positions) {
              terminal.setCursorPosition(position.getX(), position.getY());
              terminal.putCharacter(block);
+             terminal.setCursorVisible(false);
+
          }
         terminal.flush();
     }
Index: src/main/java/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Player extends Characters {\r\n\r\n    private int x;\r\n    private int y;\r\n    private char symbol;\r\n    private int previousX;\r\n    private int previousY;\r\n\r\n    public Player(boolean isAlive, Position position, char symbol) {\r\n        super(isAlive, position, symbol);\r\n    }\r\n\r\n\r\n    public int getX() {\r\n        return x;\r\n    }\r\n\r\n    public int getY() {\r\n        return y;\r\n    }\r\n\r\n    public char getSymbol() {\r\n        return symbol;\r\n    }\r\n\r\n    public int getPreviousX() {\r\n        return previousX;\r\n    }\r\n\r\n    public int getPreviousY() {\r\n        return previousY;\r\n    }\r\n\r\n    public void moveUp(){\r\n        previousX = x;\r\n        previousY = y;\r\n        y -= 2;\r\n    }\r\n\r\n    public void moveDown(){\r\n        previousX = x;\r\n        previousY = y;\r\n        y += 2;\r\n    }\r\n\r\n    public void moveLeft(){\r\n        previousX = x;\r\n        previousY = y;\r\n        x -= 2;\r\n    }\r\n\r\n    public void moveRight(){\r\n        previousX = x;\r\n        previousY = y;\r\n        x += 2;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"monstergame2.Player{\" +\r\n                \"x=\" + x +\r\n                \", y=\" + y +\r\n                \", symbol=\" + symbol +\r\n                \", previousX=\" + previousX +\r\n                \", previousY=\" + previousY +\r\n                '}';\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Player.java b/src/main/java/Player.java
--- a/src/main/java/Player.java	(revision a3781312ce11e1cea1ee79690d86ce70321c9d5d)
+++ b/src/main/java/Player.java	(date 1661261105706)
@@ -2,7 +2,6 @@
 
     private int x;
     private int y;
-    private char symbol;
     private int previousX;
     private int previousY;
 
@@ -34,25 +33,25 @@
     public void moveUp(){
         previousX = x;
         previousY = y;
-        y -= 2;
+        y -= 1;
     }
 
     public void moveDown(){
         previousX = x;
         previousY = y;
-        y += 2;
+        y += 1;
     }
 
     public void moveLeft(){
         previousX = x;
         previousY = y;
-        x -= 2;
+        x -= 1;
     }
 
     public void moveRight(){
         previousX = x;
         previousY = y;
-        x += 2;
+        x += 1;
     }
 
     @Override
Index: src/main/java/MonsterGame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.googlecode.lanterna.TerminalSize;\r\nimport com.googlecode.lanterna.TextColor;\r\nimport com.googlecode.lanterna.input.KeyStroke;\r\nimport com.googlecode.lanterna.terminal.DefaultTerminalFactory;\r\nimport com.googlecode.lanterna.terminal.Terminal;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MonsterGame {\r\n\r\n    public static void main(String[] args) throws IOException {\r\n\r\n        try {\r\n            startGame();\r\n        } catch (IOException | InterruptedException e) {\r\n            e.printStackTrace();\r\n            System.exit(1);\r\n        } finally {\r\n            System.out.println(\"Game over!\");\r\n        }\r\n    }\r\n\r\n    public static void loadMap(Terminal terminal) throws IOException {\r\n        Map map = new Map();\r\n        map.printMap(terminal);\r\n    }\r\n\r\n    private static void startGame() throws IOException, InterruptedException {\r\n        TerminalSize ts = new TerminalSize(150, 40);\r\n        DefaultTerminalFactory terminalFactory = new DefaultTerminalFactory();\r\n        terminalFactory.setInitialTerminalSize(ts);\r\n        Terminal terminal = terminalFactory.createTerminal();\r\n        loadMap(terminal);\r\n        terminal.flush();\r\n\r\n        Player player = createPlayer();\r\n\r\n        List<Monster> monsters = createMonsters();\r\n\r\n        drawCharacters(terminal, player, monsters);\r\n\r\n        do {\r\n            KeyStroke keyStroke = getUserKeyStroke(terminal);\r\n\r\n            movePlayer(player, keyStroke);\r\n\r\n            moveMonsters(player, monsters);\r\n\r\n            drawCharacters(terminal, player, monsters);\r\n\r\n        } while (isPlayerAlive(player, monsters));\r\n\r\n        terminal.setForegroundColor(TextColor.ANSI.RED);\r\n        terminal.setCursorPosition(player.getX(), player.getY());\r\n        terminal.putCharacter(player.getSymbol());\r\n        terminal.bell();\r\n        terminal.flush();\r\n    }\r\n\r\n    private static void moveMonsters(Player player, List<Monster> monsters) {\r\n        for (Monster monster : monsters) {\r\n            monster.moveTowards(player);\r\n        }\r\n    }\r\n\r\n    private static void movePlayer(Player player, KeyStroke keyStroke) {\r\n        switch (keyStroke.getKeyType()) {\r\n            case ArrowUp -> player.moveUp();\r\n            case ArrowDown -> player.moveDown();\r\n            case ArrowLeft -> player.moveLeft();\r\n            case ArrowRight -> player.moveRight();\r\n        }\r\n    }\r\n\r\n    private static KeyStroke getUserKeyStroke(Terminal terminal) throws InterruptedException, IOException {\r\n        KeyStroke keyStroke;\r\n        do {\r\n            Thread.sleep(5);\r\n            keyStroke = terminal.pollInput();\r\n        } while (keyStroke == null);\r\n        return keyStroke;\r\n    }\r\n\r\n    public static Player createPlayer() {\r\n        return new Player(true,new Position(10, 10), 'C');\r\n    }\r\n\r\n    private static List<Monster> createMonsters() {\r\n        List<Monster> monsters = new ArrayList<>();\r\n        monsters.add(new Monster(true, new Position(3, 3), 'X'));\r\n        return monsters;\r\n    }\r\n\r\n    private static Terminal createTerminal() throws IOException {\r\n        DefaultTerminalFactory terminalFactory = new DefaultTerminalFactory();\r\n        Terminal terminal = terminalFactory.createTerminal();\r\n        terminal.setCursorVisible(false);\r\n        return terminal;\r\n    }\r\n\r\n    private static void drawCharacters(Terminal terminal, Player player, List<Monster> monsters) throws IOException {\r\n        for (Monster monster : monsters) {\r\n            terminal.setCursorPosition(monster.getPosition().getPreviousX(), monster.getPosition().getPreviousY());\r\n            terminal.putCharacter(' ');\r\n            monster.position.getX();\r\n            terminal.setCursorPosition(monster.getPosition().getX(), monster.getPosition().getY());\r\n            terminal.putCharacter(monster.getSymbol());\r\n        }\r\n\r\n        terminal.setCursorPosition(player.getPreviousX(), player.getPreviousY());\r\n        terminal.putCharacter(' ');\r\n\r\n        terminal.setCursorPosition(player.getX(), player.getY());\r\n        terminal.putCharacter(player.getSymbol());\r\n\r\n        terminal.flush();\r\n\r\n    }\r\n\r\n    private static boolean isPlayerAlive(Player player, List<Monster> monsters) {\r\n        for (Monster monster : monsters) {\r\n            if (monster.getPosition().getX() == player.getX() && monster.getPosition().getY() == player.getY()) {\r\n                player.isAlive = true;\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/MonsterGame.java b/src/main/java/MonsterGame.java
--- a/src/main/java/MonsterGame.java	(revision a3781312ce11e1cea1ee79690d86ce70321c9d5d)
+++ b/src/main/java/MonsterGame.java	(date 1661261950393)
@@ -28,7 +28,7 @@
     }
 
     private static void startGame() throws IOException, InterruptedException {
-        TerminalSize ts = new TerminalSize(150, 40);
+        TerminalSize ts = new TerminalSize(100, 40);
         DefaultTerminalFactory terminalFactory = new DefaultTerminalFactory();
         terminalFactory.setInitialTerminalSize(ts);
         Terminal terminal = terminalFactory.createTerminal();
@@ -65,6 +65,26 @@
         }
     }
 
+    private static void crash(Map map) {
+        boolean crashIntoObsticle = false;
+        for (Position p : map.getPositions()) {
+            if (p.x == p.getX() && p.y == p.getY()) {
+                crashIntoObsticle = true;
+            }
+        }
+
+        if (crashIntoObsticle) {
+            map.getPositions().setX(map.getPositions().getPreviousX());
+            map.getPositions().setY(map.getPositions().getPreviousY());
+        }
+        else {
+            terminal.setCursorPosition(map.getPositions().getPreviousX(), map.getPositions().getPreviousY());
+            terminal.putCharacter(' ');
+            terminal.setCursorPosition(map.getPositions().getX(), map.getPositions().getY());
+            terminal.putCharacter('C');
+        }
+    }
+
     private static void movePlayer(Player player, KeyStroke keyStroke) {
         switch (keyStroke.getKeyType()) {
             case ArrowUp -> player.moveUp();
@@ -104,7 +124,7 @@
         for (Monster monster : monsters) {
             terminal.setCursorPosition(monster.getPosition().getPreviousX(), monster.getPosition().getPreviousY());
             terminal.putCharacter(' ');
-            monster.position.getX();
+            monster.getPosition().getX();
             terminal.setCursorPosition(monster.getPosition().getX(), monster.getPosition().getY());
             terminal.putCharacter(monster.getSymbol());
         }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ab343867-5b88-4de0-b281-52a3beea5f45\" name=\"Changes\" comment=\".\">\r\n      <change afterPath=\"$PROJECT_DIR$/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Map.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Monster.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/MonsterGame.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Player.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Position.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Characters.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Characters.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2DkRoM6YlP0bgF71LuzyvZCjqCP\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/AlvinSkeppar/Desktop\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\AlvinSkeppar\\IdeaProjects\\MonsterGameGroup5\\src\\main\\java\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"MonsterGame\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"MonsterGame\" />\r\n      <module name=\"MonsterGameGroup5\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.MonsterGame\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ab343867-5b88-4de0-b281-52a3beea5f45\" name=\"Changes\" comment=\"\" />\r\n      <created>1661241272303</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1661241272303</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\".\">\r\n      <created>1661246722192</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661246722193</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\".\">\r\n      <created>1661247187775</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661247187775</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\".\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\".\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a3781312ce11e1cea1ee79690d86ce70321c9d5d)
+++ b/.idea/workspace.xml	(date 1661262019865)
@@ -4,18 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ab343867-5b88-4de0-b281-52a3beea5f45" name="Changes" comment=".">
-      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Map.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Monster.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/MonsterGame.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Player.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Position.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Characters.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Characters.java" afterDir="false" />
+    <list default="true" id="ab343867-5b88-4de0-b281-52a3beea5f45" name="Changes" comment="Push test, map is now working">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Map.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Map.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/MonsterGame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/MonsterGame.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Player.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -45,7 +38,7 @@
   "keyToString": {
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
-    "last_opened_file_path": "C:/Users/AlvinSkeppar/Desktop",
+    "last_opened_file_path": "C:/Users/AlvinSkeppar/IdeaProjects/Lanterna_week_test/src/main/java/Week_3_Day_5_Lanterna",
     "project.structure.last.edited": "Project",
     "project.structure.proportion": "0.0",
     "project.structure.side.proportion": "0.0"
@@ -93,7 +86,28 @@
       <option name="project" value="LOCAL" />
       <updated>1661247187775</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="Starting file">
+      <created>1661247837946</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1661247837946</updated>
+    </task>
+    <task id="LOCAL-00004" summary="Push test, map not working">
+      <created>1661256575205</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1661256575205</updated>
+    </task>
+    <task id="LOCAL-00005" summary="Push test, map is now working">
+      <created>1661258901008</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1661258901008</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -109,6 +123,9 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="." />
-    <option name="LAST_COMMIT_MESSAGE" value="." />
+    <MESSAGE value="Starting file" />
+    <MESSAGE value="Push test, map not working" />
+    <MESSAGE value="Push test, map is now working" />
+    <option name="LAST_COMMIT_MESSAGE" value="Push test, map is now working" />
   </component>
 </project>
\ No newline at end of file
